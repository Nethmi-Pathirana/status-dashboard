swagger: '2.0'
info:
  version: 1.0.0
  title: Stream Processor Status Dashboard Service
  description: This provides information about the REST APIs available for WSO2 Steam Processor Status Dashboard.
  contact:
    name: WSO2
    url: 'http://wso2.com/analytics'
    email: architecture@wso2.org
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
schemes:
  - https
host: analytics.wso2.com
basePath: /status-dashboard
paths:
  /workers:
    post:
      x-wso2-curl: >-
        curl -k -H "Content-Type: application/json" -X POST -d @data.json
        http://localhost:9090/status-dashboard/workers
      x-wso2-request: |-
        POST http://localhost:9090/status-dashboard/workers
        {"host":"localhost","port":"9090","username":"w1","password":"**"}
      x-wso2-response: >-
        HTTP/1.1 201 OK Content-Type: application/json
        {"worker-id":"WorkerID"}
      tags:
        - Workers
      summary: Add a new worker.
      description: Adds a new worker.
      operationId: addWorker
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: worker
          description: Worker object that needs to be added.
          required: true
          schema:
            $ref: '#/definitions/Worker'
      responses:
        '201':
          description: Worker is added successfully.
        '409':
          description: A worker with the given host and port already exists.
        '500':
          description: An unexpected error occured.
          
    get:
      x-wso2-curl: 'curl -k -X GET http://localhost:9090/status-dashboard/workers'
      x-wso2-request: 'GET http://localhost:9090/status-dashboard/workers'
      x-wso2-response: >-
        HTTP/1.1 200 OK Content-Type: application/json
        { "worker1":{
          "workerID":"localhost:9090",
          "Metrics": {
            {"cpu usage":"33"},
            {"memory usage":"67",
            {“Load avg”:”5”}
          },
          “HAstatus”:“active”,
          “LastUpdatedTime”:””,
          “isStatsEnabled”:”false”,
          “Siddi-apps": {
            “Active”:”3”,
            “Inactive”:”2"
           },
          "clusterID": “clusterA”},
          “worker2”:{}
        }
      tags:
        - Workers
      summary: List all workers.
      description: Lists all registered workers.
      responses:
        '201':
          description: OK.
    
  /workers/{id}:
    get:
      x-wso2-curl: 'curl -k -X GET http://localhost:9090/status-dashboard/workers/{id}'
      x-wso2-request: 'GET http://localhost:9090/status-dashboard/workers/{id}'
      x-wso2-response: >-
        HTTP/1.1 200 OK Content-Type: application/json
        {"host":"localhost","port":"9090","username":"w1","password":"**"}
      tags:
        - Workers
      summary: Get configuration details of a worker.
      description: Retrieves the configuration details of worker with the specified id.
      operationId: getWorkerConfig
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: ID of the worker.
          required: true
          type: string
      responses:
        '200':
          description: The worker is successfully retrieved.
        '404':
          description: The worker specified is not found.
    put:
      x-wso2-curl: >-
        curl -k -H "Content-Type: application/json -X PUT -d @data.json
        http://localhost:9090/status-dashboard/workers/{id}
      x-wso2-request: |-
        PUT http://localhost:9090/status-dashboard/workers/{id}
        {"username":"w1","password":"**"}
      x-wso2-response: >-
        HTTP/1.1 200 OK Content-Type: application/json
        {"message":"Worker is updated succesfully"}
      tags:
        - Workers
      summary: Update an existing worker.
      description: |
        Updates the worker.
      operationId: updateWorker
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: ID of worker that needs to be updated.
          required: true
          type: string
      responses:
        '200':
          description: Successfully updated the worker.
          schema:
            $ref: '#/definitions/ApiResponseMessage'
        '404':
          description: Worker not found.
        '500':
          description: An unexpected error occured.

    delete:
      x-wso2-curl: 'curl -k -X DELETE http://localhost:9090/status-dashboard/workers/{id}'
      x-wso2-request: 'DELETE http://localhost:9090/status-dashboard/workers/{id}'
      x-wso2-response: HTTP/1.1 200 OK
      tags:
        - Workers
      summary: Deletes a worker.
      description: >
        Removes the worker with the worker id
        specified.
        
        Path param of **id** determines id of the worker.
      operationId: deleteWorker
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: Id of the worker.
          required: true
          type: string
      responses:
        '200':
          description: The worker is successfully deleted.
          schema:
            $ref: '#/definitions/ApiResponseMessage'
        '404':
          description: The worker is not found.
          schema:
            $ref: '#/definitions/ApiResponseMessage'
        '500':
          description: An unexpected error occured.
          schema:
            $ref: '#/definitions/ApiResponseMessage'
            
  /workers/{id}/system-details:
    get:
      x-wso2-curl: 'curl -k -X GET http://localhost:9090/status-dashboard/workers/{id}/system-details'
      x-wso2-request: 'GET http://localhost:9090/status-dashboard/workers/{id}/system-details'
      x-wso2-response: >-
        HTTP/1.1 200 OK Content-Type: application/json
        {"OS version": "Linux 16.04","Time stamp": '2017-09-03T17:21:44+00:00',"Country": 'USA',"java-home": '/home/user/jdk1.8',"java-version": "1.8.0_101","Time-zone": "Europe/USA","Type: HA Cluster"}
      tags:
        - Workers
      summary: Get general details of a worker.
      description: Retrieves the general details of worker with the specified id.
      operationId: getWorkerGeneral
      produces:
        - application/json
      parameters:
      - name: id
        in: path
        description: ID of the worker.
        required: true
        type: string
      responses:
        '200':
          description: The worker is successfully retrieved.
        '404':
          description: The worker specified is not found.        
            
  /workers/{id}/status:
    post:
      x-wso2-curl: >-
        curl -k -H "Content-Type: application/json" -X POST -d @data.json
        http://localhost:9090/status-dashboard/workers/{id}/status
      x-wso2-request: |-
        POST http://localhost:9090/status-dashboard/workers/{id}/status
        {"username":"w1","password":"**"}
      x-wso2-response: >-
        HTTP/1.1 201 OK Content-Type: application/json
        {"status":"active"}
      tags:
        - Workers
      summary: Tests connection.
      description: Tests the connection of a worker.
      operationId: testConnection
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: auth
          description: Username and password to test connection.
          required: true
          schema:
            $ref: '#/definitions/Worker'
            
        - name: id
          in: path
          description: ID of the worker.
          required: true
          type: string
      responses:
        '200':
          description: OK.
          
          
  /workers/{id}/history:        
    get:
      x-wso2-curl: 'curl -k -X GET http://localhost:9090/status-dashboard/workers/{id}/history'
      x-wso2-request: 'GET http://localhost:9090/status-dashboard/workers/{id}/history'
      x-wso2-response: >-
        HTTP/1.1 200 OK Content-Type: application/json
        { CPU: [23,34,56], Throughput in: [12,10,9], Throughput out: [12,10,9], Memory: [12,4,6], Heap memory:[], Load average:[]}
      tags:
        - Workers
      summary: Get history statistics details of a worker.
      description: Retrieves the history statistics details of worker with the specified id.
      operationId: getHistory
      produces:
        - application/json
      parameters:
      - name: id
        in: path
        description: ID of the worker.
        required: true
        type: string
        
      - name: period
        in: query
        description: Time period to get history.
        type: string
        
      - name: type
        in: query
        description: Required types to get statistics .
        type: string
      
      responses:
        '200':
          description: History successfully retrieved.
  
  /workers/{id}/siddhi-apps:
    get:
      x-wso2-curl: 'curl -k -X GET http://localhost:9090/status-dashboard/workers/{id}/siddhi-apps'
      x-wso2-request: 'GET http://localhost:9090/status-dashboard/workers/{id}/siddhi-apps'
      x-wso2-response: >-
        HTTP/1.1 200 OK Content-Type: application/json
        {"App1": {
          "App Name": "Test AppA",
          "Status": "Running",
          "Age":"23",
          "isStatisticsenabled":"true",
          "latency":{12,12,3,4,12,25},
          "memory":{12,12,3,4,12,25},
          "throughput-in":{12,12,3,4,12,25},
          "throughput-out":{12,12,3,4,12,25}
        },
        "App2": {
          "App Name": "Test AppA",
          "Status": "Running",
          "Age":"23",
          "isStatisticsenabled":"true",
          "latency":{12,12,3,4,12,25},
          "memory":{12,12,3,4,12,25},
          "throughput-in":{12,12,3,4,12,25},
          "throughput-out":{12,12,3,4,12,25}
          }
        }

      tags:
        - Workers
      summary: Get general details of a worker.
      description: Retrieves the general details of worker with the specified id.
      operationId: getSiddhiApps
      produces:
        - application/json
      parameters:
      - name: id
        in: path
        description: ID of the worker.
        required: true
        type: string
      responses:
        '200':
          description: History successfully retrieved.
            
definitions:
  Worker:
    type: object
    required:
      - host
      - port
    properties:
      host:
        type: string
      port:
        type: string  
      username:
        type: string
      password:
        type: string
        
  ApiResponseMessage:
    type: object
    properties:
      message:
        type: string
        description: Error message

